@model BTL_Nhom13.Models.SanPham

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@section Title{
    Thêm sản phẩm mới
}
@using (Html.BeginForm("Create", "AdminSanPhams", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header card-header-primary">
                        <h4 class="card-title">Thêm sản phẩm mới</h4>
                    </div>
                    <div class="card-body">
                        <form>
                            <div class="row">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-8">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.MaDM, "Tên danh mục", htmlAttributes: new { @class = "bmd-label-floating" })
                                                @Html.DropDownList("MaDM", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.MaDM, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-8">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "bmd-label-floating" })
                                                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control", @style = "margin-top:2.6rem" } })
                                                @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-8">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NhaSX, htmlAttributes: new { @class = "bmd-label-floating" })
                                                @Html.EditorFor(model => model.NhaSX, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.NhaSX, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.TrongLuong, htmlAttributes: new { @class = "bmd-label-floating" })
                                                @Html.EditorFor(model => model.TrongLuong, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.TrongLuong, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.SoLuongTon, htmlAttributes: new { @class = "bmd-label-floating" })
                                                @Html.EditorFor(model => model.SoLuongTon, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.SoLuongTon, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "bmd-label-floating" })
                                                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ChatLuong, htmlAttributes: new { @class = "bmd-label-floating" })
                                                @Html.EditorFor(model => model.ChatLuong, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ChatLuong, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "bmd-label-floating" })
                                                @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control", rows = 3 } })
                                                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Anh, htmlAttributes: new { @class = "bmd-label-floating" })
                                        <br />
                                        <img id="output" class="img-rounded" alt="Ảnh" width="250" height="250"
                                             src="~/wwwroot/image/image_not_found.png" />
                                        <br />
                                        <label for="ufile" style="cursor: pointer; text-transform: none;" class="btn btn-sm btn-primary">Chọn tệp</label>
                                        <input name="ImageFile" id="ufile" type="file" style="display: none;"
                                               onchange="loadFile(event)" />
                                    </div>
                                </div>
                            </div>
                            <input type="submit" value="Thêm" class="btn btn-sm btn-primary normal-text" />
                            @Html.ActionLink("Quay lại", "Product", null, new { @class = "btn btn-sm btn-primary normal-text" })
                            <div class="clearfix"></div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@if (ViewBag.Error != null)
{
    <br />
    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var loadFile = function (event) {
        var image = document.getElementById("output");
        image.src = URL.createObjectURL(event.target.files[0]);
    };
</script>
